#
# Copyright (C) 2017 CAMELab
#
# This file is part of SimpleSSD.
#
# SimpleSSD is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# SimpleSSD is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with SimpleSSD.  If not, see <http://www.gnu.org/licenses/>.
#

#
# Sample SimpleSSD Configuration File
#
# Section:
# cpu:  SSD Controller CPU configuration
# nvme: Non-Volatile Memory Express configuration
# pal:  Parallelism Abstraction Layer configuration
# ftl:  Flash Translation Layer configuration
# icl:  Internal Cache Layer configuration
# dram: DRAM configuration
#

# SSD Controller CPU configuration
[cpu]
## Set clock speed in Hz
ClockSpeed = 800000000

## Set dedicated core count
HILCoreCount = 0
ICLCoreCount = 1
FTLCoreCount = 1

# NVMe interface Configuration
[nvme]

## PCI Express Interface
# Set PCIe generation and lane count
# Possible values:
#  0: PCI Express 1.x (2.5GT/s/lane)
#  1: PCI Express 2.x (5GT/s/lane)
#  2: PCI Express 3.x (8GT/s/lane)
PCIEGeneration = 2
PCIELane = 4

## PCI Express Endpoint <-> NVMe Controller
# Set bus width and clock speed of AXI-Stream interface
# Possible values:
#  0: 32Bit
#  1: 64Bit
#  2: 128Bit
#  3: 256Bit
#  4: 512Bit
#  5: 1024Bit
AXIBusWidth = 2
AXIClock = 250000000  # 128bit @ 250MHz -> 4GB/s

## Hardware FIFO Transfer unit
# Smaller value introduce smaller latency
FIFOTransferUnit = 2048

## Set interval for controller main loop
#WorkInterval = 10000  # 10ns
WorkInterval = 4000000

## Maximum # of I/O request handling on one loop
MaxRequestCount = 6

## Set maximum number of I/O queue that controller supports
# You should check BAR0 size to fit all doorbell
# Doorbell stride is always 0 (4bytes align)
MaxIOCQueue = 16
MaxIOSQueue = 16

## Set parameters of Weighted Round robin
# Set how many commands should be inserted to internal FIFO
# before switch to next low priority
WRRHigh = 2     # Medium-priority command will inserted after two high-priority commands inserted
WRRMedium = 2   # Low-priority command will inserted after two medium-priority command inserted

## Default Namespace
# 1 for create default namespace (full size)
# 0 for no namespace on boot
DefaultNamespace = 1

## LBA Size
# Set logical block size of default namespace
# If DefaultNamespace is false, this value will ignored
LBASize = 4096

## Enable Disk Image
# 1 for enable I/O to disk image
# 0 for disable disk image
EnableDiskImage = 0

## Disk Image Filename
# If EnableDiskImage is 1, and no file exists, file with size of SSD will created
# If StrictSizeCheck is 1, disk file exists, and size of disk image is not equal to SSD size, it makes error
StrictSizeCheck = 0
DiskImageFile = nvme.img

## Copy-on-Write Disk
# 0 for use normal disk
# 1 for use Copy-on-write disk (Write to disk will not affect disk image file)
UseCopyOnWriteDisk = 0

# Parallelism Abstraction Layer Configuration
[pal]

## 1TB

#Channel = 2
#Package = 4

## Set NAND package structure
#  Die:      # of die in one package
#  Plane:    # of plane in one die
#  Block:    # of block in one plane
#  Page:     # of page in one block
#  PageSize: Size of one page in byte
#Die = 8
#Plane = 1
#Block = 2732
#Page = 384 
#PageSize = 16384 #(TLC)

# 512GB 
#Channel = 16 #2 
# 256GB
Channel = 8
Package = 2

## Set NAND package structure
#  Die:      # of die in one package
#  Plane:    # of plane in one die
#  Block:    # of block in one plane
#  Page:     # of page in one block
#  PageSize: Size of one page in byte
Die = 2
Plane = 2
Block = 512
Page = 512
PageSize = 16384

## Multi-plane operation
# 1 for enable multi-plane operation
EnableMultiPlaneOperation = 0

## Set type of NAND flash
# Possible values:
#  0: Single Level Cell
#  1: Multi Level Cell
#  2: Triple Level Cell
# Please check NAND timing has valid values
#  SLC: LSB timing should valid
#  MLC: LSB and MSB timing should valid
#  TLC: LSB, CSB and MSB timing should valid
NANDType = 2

# Set NAND timing
LSBRead  = 56000000 #56us
LSBWrite = 700000000 #700us
CSBRead  = 120000000 #120us
CSBWrite = 1150000000 #1150us
MSBRead  = 180000000 #180us
MSBWrite = 1400000000 #1400us
Erase    = 5000000000 #5000us

## Set speed and width of DMA in channel in MT/s
# Width should be 8 or 16
# Typical values from ONFi:
#         ONFi   1.x     2.x   3.x~4.x    4.x
#  Timing Mode   SDR   NV-DDR  NV-DDR2  NV-DDR3
#      0         10      40      67       67
#      1         20      67      80       80
#      2         29     100     133      133
#      3         33     133     167      167
#      4         40     167     200      200
#      5         50     200     267      267
#      6          -       -     333      333
#      7          -       -     400      400
#      8          -       -     533      533
#      9          -       -       -      667
#     10          -       -       -      800
DMASpeed = 800
DMAWidth = 8

## Set superblock/page size
# Superblock/page size will multiplied by each values
# Leave empty will disable superblock feature
# Possible values:
#  C: # Channel
#  W: # Package/Way
#  D: # Die
#  P: # Plane (If multi-plane mode is enabled, P will always applied)
SuperblockSize = 

## Set page allocation order
# This order will used when disassembling logical address to physical address
# Possible values:
#  C: Channel
#  W: Package/Way
#  D: Die
#  P: Plane
PageAllocation = CWDP

# Flash Translation Layer Configuration
[ftl]

## Set mapping method
# Possible values:
#  0: Page level mapping
MappingMode = 0

## Set FTL over-provisioning ratio
OverProvisioningRatio = 0.27

## Set FTL erase threshold to mark as bad block
EraseThreshold = 20000

## Filling options
# Filling Mode
# Possible values:
#  0: Sequential filling + Sequential invalidation
#  1: Sequential filling + Random invalidation
#  2: Random filling + Random invalidation
FillingMode = 1
# FillRatio
# Fill (warm-up) pages before simulation
# Set # pages to write (Ratio to total logical pages)
# 0.0 <= val <= 1.0
FillRatio = 1.0
# InvalidPageRatio
# Create invalid pages by overwrite filled pages
# Set # pages to write (Ratio to total logical pages)
# 0.0 <= val <= 1.0
InvalidPageRatio = 0.0

## Set victim selection algorithm
# Possible values:
#  0: Greedy: Choose least utilized block to clean
#  1: Cost-Benefit: Choose a block that lowest (Utilization / ((1 - Utilization) * Age))
EvictPolicy = 0

## Set garbage collection threshold (ratio of free blocks left)
GCThreshold = 0.05

## Garbage collection mode
# Possible values:
#  0: Reclaim n blocks
#  1: Reclaim blocks until threshold
GCMode = 1

## Specify n (Only in GCMode = 0)
# n > 0
GCReclaimBlocks = 1

## Specify threshold (Only in GCMode = 1)
# t > GCThreshold
GCReclaimThreshold = 0.05

## Random I/O tweak
# Enable random I/O tweak when using superpage based mapping
EnableRandomIOTweak = 0

## Set refresh algorithm
# Possible values:
#  0: None: Refresh only when retention time exceeds threshold
RefreshPolicy = 0

## Refresh parameter
#  Should be given in unit of tick (ps)
RefreshThreshold = 400000000000000 #400s



## Error modeling parameters
# Temperature in unit of Â°C
Temperature = 25

# coefficients for retention error modeling
Epsilon = -12.72
Alpha = 0.00000792
Beta = 0.25
Gamma = 0.0000328
Kterm = 2.05
Mterm = 0.14
Nterm = 0.54

# sigma for random error generation
ErrorSigma = 0.00002

# random seed for random error generation
RandomSeed = 0

## Configuration for experiment
InitialPECycle = 3000

MaxRBER = 0.00025


# Internal Cache Layer Configuration
[icl]

## Set Cache size
# Cacheline size = physical page size * (multi-plane mode ? plane count : 1)
# Directed-map cache: Set way as 1
# Fully-associative cache: Set way value as 0
CacheSize = 536870912   # 512MiB
CacheWaySize = 8

## Set read caching (1 for enable)
EnableReadCache = 0

## Set read prefetching (1 for enable)
EnableReadPrefetch = 0

## Set prefetch granularity
# Possible values:
#  0: One super page
#  1: One page from all NAND flashes
ReadPrefetchMode = 1

## Set # of I/O to determine sequential access
# Value < 1 is invalid
# 1 means if 2 contiguous I/O is sequential, prefetch will be enabled
ReadPrefetchCount = 3

## Set size of sequential I/O to determine as sequential access
# At least (Super page size * ratio) should be accessed as sequential
# 0 < ratio
ReadPrefetchRatio = 0.25

## Set write caching (1 for enable)
EnableWriteCache = 0

## Set cache evict policy
# Possible values:
#  0: RANDOM: Evict entry in random fashion
#  1: FIFO: Evict most oldest entry in selected set
#  2: LRU: Evict least recently used entry in selected set
EvictPolicy = 2

## Set cache evict granularity
# Possible values:
#  0: One super page
#  1: One page from all NAND flashes
EvictMode = 1

## Set cache metadata latency
# Byte / ps
CacheLatency = 10

# DRAM configuration
[dram]

# K4F2E3S4HA-86CH 12Gb x32 LPDDR4-3733

## Select DRAM model to use
# Possible values:
#  0: Simple DRAM model based on atomic dram controller of gem5
Model = 0

## DRAM structure parameters
Channel = 1
Rank = 1
Bank = 8
Chip = 1
BusWidth = 32
BurstLength = 8
ChipSize = 1610612736
PageSize = 4096

## DRAM timing parameters (Unit: ps)
tCK = 536
tRCD = 9112
tCL = 9112
tRP = 9112
tRAS = 19296
# tWR = 18000
# tRTP = 7500
tBURST = 2144
# tCCD_L =
# tRFC = 160000  # 160ns ~ 70200ns
# tREFI = 7800000
# tWTR = 7500
# tRTW =
# tCS =
# tRRD = 6000
# tRRD_L =
# tXAW =
# tXP = 6000
# tXPDLL = 24000
# tXS = 170000  # tRFC + 10ns
# tXSDLL = 640000

## DRAM power parameters (Unit: mA or V)
# IDD0_0 = 40
# IDD0_1 = 0
# IDD2P0_0 = 12
# IDD2P0_1 = 0
# IDD2P1_0 = 14
# IDD2P1_1 = 0
# IDD2N_0 = 21
# IDD2N_1 = 0
# IDD3P0_0 = 21
# IDD3P0_1 = 0
# IDD3P1_0 = 21
# IDD3P1_1 = 0
# IDD3N_0 = 34
# IDD3N_1 = 0
# IDD4R_0 = 100
# IDD4R_1 = 0
# IDD4W_0 = 105
# IDD4W_1 = 0
# IDD5_0 = 182
# IDD5_1 = 0
# IDD6_0 = 12
# IDD6_1 = 0
# VDD_0 = 1.35
# VDD_1 = 0